"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
var HtmlCrossOriginPlugin_exports = {};
__export(HtmlCrossOriginPlugin_exports, {
  HtmlCrossOriginPlugin: () => HtmlCrossOriginPlugin
});
module.exports = __toCommonJS(HtmlCrossOriginPlugin_exports);
var import_shared = require("@rsbuild/shared");
var import_htmlPluginUtil = require("../provider/htmlPluginUtil");
class HtmlCrossOriginPlugin {
  constructor(options) {
    __publicField(this, "name");
    __publicField(this, "crossOrigin");
    const { crossOrigin } = options;
    this.name = "HtmlCrossOriginPlugin";
    this.crossOrigin = crossOrigin;
  }
  apply(compiler) {
    if (!this.crossOrigin) {
      return;
    }
    if (this.crossOrigin !== "use-credentials") {
      const { publicPath } = compiler.options.output;
      if (!publicPath || publicPath === import_shared.DEFAULT_ASSET_PREFIX || publicPath === "auto") {
        return;
      }
    }
    compiler.hooks.compilation.tap(this.name, (compilation) => {
      (0, import_htmlPluginUtil.getHTMLPlugin)().getHooks(compilation).alterAssetTags.tap(this.name, (alterAssetTags) => {
        const {
          assetTags: { scripts, styles }
        } = alterAssetTags;
        scripts.forEach((script) => {
          var _a;
          (_a = script.attributes).crossorigin ?? (_a.crossorigin = this.crossOrigin);
        });
        styles.forEach((style) => {
          var _a;
          (_a = style.attributes).crossorigin ?? (_a.crossorigin = this.crossOrigin);
        });
        return alterAssetTags;
      });
    });
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  HtmlCrossOriginPlugin
});
