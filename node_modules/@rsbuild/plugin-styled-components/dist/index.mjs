import { createRequire } from 'module';
var require = createRequire(import.meta['url']);


// ../../node_modules/.pnpm/@modern-js+module-tools@2.48.0/node_modules/@modern-js/module-tools/shims/esm.js
import { fileURLToPath } from "url";
import path from "path";

// src/index.ts
import {
  getNodeEnv,
  isServerTarget,
  mergeChainedOptions,
  getDefaultStyledComponentsConfig
} from "@rsbuild/shared";
var pluginStyledComponents = (pluginOptions = {}) => ({
  name: "rsbuild:styled-components",
  setup(api) {
    if (api.context.bundlerType === "webpack") {
      return;
    }
    const getMergedOptions = () => {
      const useSSR = isServerTarget(api.context.targets);
      const isProd = getNodeEnv() === "production";
      return mergeChainedOptions({
        defaults: getDefaultStyledComponentsConfig(isProd, useSSR),
        options: pluginOptions
      });
    };
    api.modifyRsbuildConfig((userConfig, { mergeRsbuildConfig }) => {
      const extraConfig = {
        tools: {
          swc(opts) {
            const mergedOptions = getMergedOptions();
            if (!mergedOptions) {
              return opts;
            }
            opts.rspackExperiments ?? (opts.rspackExperiments = {});
            opts.rspackExperiments.styledComponents = mergedOptions;
            return opts;
          }
        }
      };
      return mergeRsbuildConfig(extraConfig, userConfig);
    });
  }
});
export {
  pluginStyledComponents
};
